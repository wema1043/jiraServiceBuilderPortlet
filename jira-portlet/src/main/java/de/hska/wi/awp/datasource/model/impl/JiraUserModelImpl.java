package de.hska.wi.awp.datasource.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import de.hska.wi.awp.datasource.model.JiraUser;
import de.hska.wi.awp.datasource.model.JiraUserModel;
import de.hska.wi.awp.datasource.model.JiraUserSoap;
import de.hska.wi.awp.datasource.service.persistence.JiraUserPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the JiraUser service. Represents a row in the &quot;jira_JiraUser&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link de.hska.wi.awp.datasource.model.JiraUserModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link JiraUserImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see JiraUserImpl
 * @see de.hska.wi.awp.datasource.model.JiraUser
 * @see de.hska.wi.awp.datasource.model.JiraUserModel
 * @generated
 */
@JSON(strict = true)
public class JiraUserModelImpl extends BaseModelImpl<JiraUser>
    implements JiraUserModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a jira user model instance should use the {@link de.hska.wi.awp.datasource.model.JiraUser} interface instead.
     */
    public static final String TABLE_NAME = "jira_JiraUser";
    public static final Object[][] TABLE_COLUMNS = {
            { "creatorId", Types.VARCHAR },
            { "displayname", Types.VARCHAR },
            { "groupId", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table jira_JiraUser (creatorId VARCHAR(75) not null,displayname VARCHAR(75) null,groupId VARCHAR(75) not null,primary key (creatorId, groupId))";
    public static final String TABLE_SQL_DROP = "drop table jira_JiraUser";
    public static final String ORDER_BY_JPQL = " ORDER BY jiraUser.id.creatorId ASC, jiraUser.id.groupId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY jira_JiraUser.creatorId ASC, jira_JiraUser.groupId ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.de.hska.wi.awp.datasource.model.JiraUser"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.de.hska.wi.awp.datasource.model.JiraUser"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.de.hska.wi.awp.datasource.model.JiraUser"),
            true);
    public static long CREATORID_COLUMN_BITMASK = 1L;
    public static long GROUPID_COLUMN_BITMASK = 2L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.de.hska.wi.awp.datasource.model.JiraUser"));
    private static ClassLoader _classLoader = JiraUser.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            JiraUser.class
        };
    private String _creatorId;
    private String _originalCreatorId;
    private String _displayname;
    private String _groupId;
    private long _columnBitmask;
    private JiraUser _escapedModel;

    public JiraUserModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static JiraUser toModel(JiraUserSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        JiraUser model = new JiraUserImpl();

        model.setCreatorId(soapModel.getCreatorId());
        model.setDisplayname(soapModel.getDisplayname());
        model.setGroupId(soapModel.getGroupId());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<JiraUser> toModels(JiraUserSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<JiraUser> models = new ArrayList<JiraUser>(soapModels.length);

        for (JiraUserSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public JiraUserPK getPrimaryKey() {
        return new JiraUserPK(_creatorId, _groupId);
    }

    @Override
    public void setPrimaryKey(JiraUserPK primaryKey) {
        setCreatorId(primaryKey.creatorId);
        setGroupId(primaryKey.groupId);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return new JiraUserPK(_creatorId, _groupId);
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey((JiraUserPK) primaryKeyObj);
    }

    @Override
    public Class<?> getModelClass() {
        return JiraUser.class;
    }

    @Override
    public String getModelClassName() {
        return JiraUser.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("creatorId", getCreatorId());
        attributes.put("displayname", getDisplayname());
        attributes.put("groupId", getGroupId());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        String creatorId = (String) attributes.get("creatorId");

        if (creatorId != null) {
            setCreatorId(creatorId);
        }

        String displayname = (String) attributes.get("displayname");

        if (displayname != null) {
            setDisplayname(displayname);
        }

        String groupId = (String) attributes.get("groupId");

        if (groupId != null) {
            setGroupId(groupId);
        }
    }

    @JSON
    @Override
    public String getCreatorId() {
        if (_creatorId == null) {
            return StringPool.BLANK;
        } else {
            return _creatorId;
        }
    }

    @Override
    public void setCreatorId(String creatorId) {
        _columnBitmask |= CREATORID_COLUMN_BITMASK;

        if (_originalCreatorId == null) {
            _originalCreatorId = _creatorId;
        }

        _creatorId = creatorId;
    }

    public String getOriginalCreatorId() {
        return GetterUtil.getString(_originalCreatorId);
    }

    @JSON
    @Override
    public String getDisplayname() {
        if (_displayname == null) {
            return StringPool.BLANK;
        } else {
            return _displayname;
        }
    }

    @Override
    public void setDisplayname(String displayname) {
        _displayname = displayname;
    }

    @JSON
    @Override
    public String getGroupId() {
        if (_groupId == null) {
            return StringPool.BLANK;
        } else {
            return _groupId;
        }
    }

    @Override
    public void setGroupId(String groupId) {
        _groupId = groupId;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public JiraUser toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (JiraUser) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        JiraUserImpl jiraUserImpl = new JiraUserImpl();

        jiraUserImpl.setCreatorId(getCreatorId());
        jiraUserImpl.setDisplayname(getDisplayname());
        jiraUserImpl.setGroupId(getGroupId());

        jiraUserImpl.resetOriginalValues();

        return jiraUserImpl;
    }

    @Override
    public int compareTo(JiraUser jiraUser) {
        JiraUserPK primaryKey = jiraUser.getPrimaryKey();

        return getPrimaryKey().compareTo(primaryKey);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof JiraUser)) {
            return false;
        }

        JiraUser jiraUser = (JiraUser) obj;

        JiraUserPK primaryKey = jiraUser.getPrimaryKey();

        if (getPrimaryKey().equals(primaryKey)) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey().hashCode();
    }

    @Override
    public void resetOriginalValues() {
        JiraUserModelImpl jiraUserModelImpl = this;

        jiraUserModelImpl._originalCreatorId = jiraUserModelImpl._creatorId;

        jiraUserModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<JiraUser> toCacheModel() {
        JiraUserCacheModel jiraUserCacheModel = new JiraUserCacheModel();

        jiraUserCacheModel.creatorId = getCreatorId();

        String creatorId = jiraUserCacheModel.creatorId;

        if ((creatorId != null) && (creatorId.length() == 0)) {
            jiraUserCacheModel.creatorId = null;
        }

        jiraUserCacheModel.displayname = getDisplayname();

        String displayname = jiraUserCacheModel.displayname;

        if ((displayname != null) && (displayname.length() == 0)) {
            jiraUserCacheModel.displayname = null;
        }

        jiraUserCacheModel.groupId = getGroupId();

        String groupId = jiraUserCacheModel.groupId;

        if ((groupId != null) && (groupId.length() == 0)) {
            jiraUserCacheModel.groupId = null;
        }

        return jiraUserCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(7);

        sb.append("{creatorId=");
        sb.append(getCreatorId());
        sb.append(", displayname=");
        sb.append(getDisplayname());
        sb.append(", groupId=");
        sb.append(getGroupId());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(13);

        sb.append("<model><model-name>");
        sb.append("de.hska.wi.awp.datasource.model.JiraUser");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>creatorId</column-name><column-value><![CDATA[");
        sb.append(getCreatorId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>displayname</column-name><column-value><![CDATA[");
        sb.append(getDisplayname());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>groupId</column-name><column-value><![CDATA[");
        sb.append(getGroupId());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
